name: CI

on:
  push:
    branches: [ main, tashakim-streamline-workflows ]
  pull_request:
    branches: [ main, tashakim-streamline-workflows ]

jobs:
  build-and-test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node: [14, 16, 18, 20]
    
    defaults:
      run:
        working-directory: ./frontend
    
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4
    
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: ${{ matrix.node }}

    - name: Load environment variables from .env file
      run: |
        if [ -f .env ]; then
          export $(grep -v '^#' .env | xargs)
        fi
    - name: Deploy to AWS S3
      run: aws s3 sync ./dist s3://my-website-bucket --access-key $AWS_ACCESS_KEY_ID --secret-key $AWS_SECRET_ACCESS_KEY

    - name: Install dependencies
      run: npm install
      
    - name: Build web
      run: npx expo export -p web

    - name: Run tests
      run: npm test

    - name: Build docs
      run: mkdocs build

    - name: Deploy docs to GitHub pages
      uses: peaceiris/actions-gh-pages@v3
      with:
        github_token: ${{ secrets.GITHUB_TOKEN }}
        publish_dir: ./site

  lint:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Load environment variables from .env file
        run: |
          if [ -f .env ]; then
            export $(grep -v '^#' .env | xargs)
          fi

      - name: Deploy to AWS S3
        run: aws s3 sync ./dist s3://my-website-bucket --access-key $AWS_ACCESS_KEY_ID --secret-key $AWS_SECRET_ACCESS_KEY

      - name: Install dependencies
        run: npm install

      - name: Run linter
        run: npm run lint

  docker-build-and-push:
    runs-on: ubuntu-latest
    needs: [build-and-test, lint]  # ensure Docker builds only if tests & linting pass
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Load environment variables from .env file
        run: |
          if [ -f .env ]; then
            export $(grep -v '^#' .env | xargs)
          fi

      - name: Log in to DockerHub
        run: echo "${{ secrets.DOCKER_PASSWORD }}" | docker login -u "${{ secrets.DOCKER_USERNAME }}" --password-stdin

      - name: Build Docker Image
        run: docker build -t myusername/myapp:latest .

      - name: Push Docker Image to DockerHub
        run: docker push myusername/myapp:latest
      
  security-scan:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: github/codeql-action/init@v2
      - uses: github/codeql-action/analyze@v2

  trivy-scan:
    runs-on: ubuntu-latest
    needs: [docker]

    steps:
      - uses: aquasecurity/trivy-action@master
        with:
          image-ref: 'myusername/myapp:latest'
          format: 'table'

